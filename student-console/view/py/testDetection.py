# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'testDetection.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QWidget

from thread.detection_thread import DetectionThread
from thread.predict_thread import PredictThread

class Ui_TestDetection(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1047, 600)
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(120, 40, 640, 471))
        self.label.setText("")
        self.label.setObjectName("label")
        self.startDetectionBtn = QtWidgets.QPushButton(Form)
        self.startDetectionBtn.setGeometry(QtCore.QRect(240, 540, 141, 41))
        self.startDetectionBtn.setObjectName("startDetectionBtn")
        self.stopDetectionBtn = QtWidgets.QPushButton(Form)
        self.stopDetectionBtn.setGeometry(QtCore.QRect(500, 540, 141, 41))
        self.stopDetectionBtn.setObjectName("stopDetectionBtn")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setGeometry(QtCore.QRect(820, 20, 201, 491))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 181, 472))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.point02 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point02.setObjectName("point02")
        self.gridLayout.addWidget(self.point02, 1, 0, 1, 1)
        self.point04 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point04.setObjectName("point04")
        self.gridLayout.addWidget(self.point04, 3, 0, 1, 1)
        self.point06 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point06.setObjectName("point06")
        self.gridLayout.addWidget(self.point06, 5, 0, 1, 1)
        self.point05 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point05.setObjectName("point05")
        self.gridLayout.addWidget(self.point05, 4, 0, 1, 1)
        self.point08 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point08.setObjectName("point08")
        self.gridLayout.addWidget(self.point08, 7, 0, 1, 1)
        self.error_msg = QtWidgets.QLabel(self.gridLayoutWidget)
        self.error_msg.setText("")
        self.error_msg.setObjectName("error_msg")
        self.gridLayout.addWidget(self.error_msg, 0, 1, 1, 1)
        self.point03 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point03.setObjectName("point03")
        self.gridLayout.addWidget(self.point03, 2, 0, 1, 1)
        self.point07 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point07.setObjectName("point07")
        self.gridLayout.addWidget(self.point07, 6, 0, 1, 1)
        self.point01 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point01.setObjectName("point01")
        self.gridLayout.addWidget(self.point01, 0, 0, 1, 1)
        self.point09 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.point09.setObjectName("point09")
        self.gridLayout.addWidget(self.point09, 8, 0, 1, 1)
        self.location = QtWidgets.QLabel(self.gridLayoutWidget)
        self.location.setText("")
        self.location.setObjectName("location")
        self.gridLayout.addWidget(self.location, 1, 1, 1, 1)
        self.gender = QtWidgets.QLabel(self.gridLayoutWidget)
        self.gender.setText("")
        self.gender.setObjectName("gender")
        self.gridLayout.addWidget(self.gender, 2, 1, 1, 1)
        self.age = QtWidgets.QLabel(self.gridLayoutWidget)
        self.age.setText("")
        self.age.setObjectName("age")
        self.gridLayout.addWidget(self.age, 3, 1, 1, 1)
        self.emotion = QtWidgets.QLabel(self.gridLayoutWidget)
        self.emotion.setText("")
        self.emotion.setObjectName("emotion")
        self.gridLayout.addWidget(self.emotion, 4, 1, 1, 1)
        self.face_shape = QtWidgets.QLabel(self.gridLayoutWidget)
        self.face_shape.setText("")
        self.face_shape.setObjectName("face_shape")
        self.gridLayout.addWidget(self.face_shape, 5, 1, 1, 1)
        self.expression = QtWidgets.QLabel(self.gridLayoutWidget)
        self.expression.setText("")
        self.expression.setObjectName("expression")
        self.gridLayout.addWidget(self.expression, 6, 1, 1, 1)
        self.glasses = QtWidgets.QLabel(self.gridLayoutWidget)
        self.glasses.setText("")
        self.glasses.setObjectName("glasses")
        self.gridLayout.addWidget(self.glasses, 7, 1, 1, 1)
        self.beauty = QtWidgets.QLabel(self.gridLayoutWidget)
        self.beauty.setText("")
        self.beauty.setObjectName("beauty")
        self.gridLayout.addWidget(self.beauty, 8, 1, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.startDetectionBtn.setText(_translate("Form", "开始检测"))
        self.stopDetectionBtn.setText(_translate("Form", "暂停检测"))
        self.point02.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point04.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point06.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point05.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point08.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point03.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point07.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point01.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))
        self.point09.setText(_translate("Form", "<html><head/><body><p><span style=\" font-size:24pt;\">·</span></p></body></html>"))



class TestDetectionPage(QWidget, Ui_TestDetection):

    def __init__(self):
        super().__init__()
        self.setupUi(self)

        self.label.setStyleSheet("background-color:gray;")

        self.startDetectionBtn.clicked.connect(self.startDetection)
        self.stopDetectionBtn.clicked.connect(self.stopDetection)
        self.startDetectionBtn.setEnabled(True)  # 开始按钮可以点击
        self.stopDetectionBtn.setEnabled(False)  # 停止按钮不可以点击

    def startDetection(self):
        self.startDetectionBtn.setEnabled(False)        #开始按钮不可点击
        self.stopDetectionBtn.setEnabled(True)          #仅可以点击停止

        self.detectionThread = DetectionThread()
        self.predictThread = PredictThread()

        self.detectionThread.valueChange.connect(self.printImage)
        self.predictThread.valueChange.connect(self.sentAnalysis)

        self.detectionThread.start()
        self.predictThread.start()

    def stopDetection(self):

        self.startDetectionBtn.setEnabled(True)         #开始按钮可以点击
        self.stopDetectionBtn.setEnabled(False)         #停止按钮不可以点击

        self.detectionThread.cancel()
        self.predictThread.cancel()

    def printImage(self, img):
        self.label.setPixmap(img)

    def sentAnalysis(self, data):

        if data['error_msg'] == "pic not has face":
            self.error_msg.setText("NOT FACE!")
            self.error_msg.setStyleSheet("color:red")
            self.location.setText("")
            self.age.setText("")
            self.gender.setText("")
            self.emotion.setText("")
            self.expression.setText("")
            self.face_shape.setText("")
            self.glasses.setText("")
            self.beauty.setText("")

            self.point01.setStyleSheet("color:red")
            self.point02.setStyleSheet("color:red")
            self.point03.setStyleSheet("color:red")
            self.point04.setStyleSheet("color:red")
            self.point05.setStyleSheet("color:red")
            self.point06.setStyleSheet("color:red")
            self.point07.setStyleSheet("color:red")
            self.point08.setStyleSheet("color:red")
            self.point09.setStyleSheet("color:red")
            return


        self.error_msg.setText(data['error_msg'])
        self.error_msg.setStyleSheet("color:black")

        self.location.setText(str(data['result']['face_list'][0]['location']['left']) + "," + str(data['result']['face_list'][0]['location']['top']))

        self.gender.setText(data['result']['face_list'][0]['gender']['type'])

        self.age.setText(str(data['result']['face_list'][0]['age']))

        self.emotion.setText(data['result']['face_list'][0]['emotion']['type'])

        self.face_shape.setText(data['result']['face_list'][0]['face_shape']['type'])

        self.expression.setText(data['result']['face_list'][0]['expression']['type'])

        self.glasses.setText(data['result']['face_list'][0]['glasses']['type'])

        self.beauty.setText(str(data['result']['face_list'][0]['beauty']))

        self.point01.setStyleSheet("color:green")
        self.point02.setStyleSheet("color:green")
        self.point03.setStyleSheet("color:green")
        self.point04.setStyleSheet("color:green")
        self.point05.setStyleSheet("color:green")
        self.point06.setStyleSheet("color:green")
        self.point07.setStyleSheet("color:green")
        self.point08.setStyleSheet("color:green")
        self.point09.setStyleSheet("color:green")



"""
检测项:
1、人脸
    data['error_msg']
        SUCCESS:检测成功
        pic not has face:检测失败

2、人脸在图片中的位置
    data['result']['face_list'][0]['location']['left']---->距离左边位置
    data['result']['face_list'][0]['location']['right']---->距离右边位置
    data['result']['face_list'][0]['location']['height']---->高度
    data['result']['face_list'][0]['location']['width']---->宽度

3、性别
    data['result']['face_list'][0]['gender']['type']

4、年龄估算
    data['result']['face_list'][0]['age']---->年龄

5、情绪
    data['result']['face_list'][0]['emotion']['type']

6、脸型
    data['result']['face_list'][0]['face_shape']['type']

7、表达
    data['result']['face_list'][0]['expression']['type']

8、有无眼睛
    data['result']['face_list'][0]['glasses']['type']

9、照片质量
    data['result']['face_list'][0]['beauty']---->照片质量


"""