package com.gaoliwei.aaos.mapper;

import com.gaoliwei.aaos.domain.Teacher;
import com.gaoliwei.aaos.domain.Teacher;

import java.util.List;
import java.util.Map;

public interface TeacherMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated Sun Apr 10 10:36:16 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated Sun Apr 10 10:36:16 CST 2022
     */
    int insert(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated Sun Apr 10 10:36:16 CST 2022
     */
    int insertSelective(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated Sun Apr 10 10:36:16 CST 2022
     */
    Teacher selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated Sun Apr 10 10:36:16 CST 2022
     */
    int updateByPrimaryKeySelective(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated Sun Apr 10 10:36:16 CST 2022
     */
    int updateByPrimaryKey(Teacher record);



    /**
     * 通过条件去检索所有的老师
     * @return
     */
    List<Teacher> selectAllTeachersByCondition(Map<String, Object> map);


    /**
     * 插入一个老师的具体信息至表格
     * @param teacher
     * @return
     */
    int insertTeacher(Teacher teacher);


    /**
     * 通过id查询老师信息
     * @param id
     * @return
     */
    Teacher selectTeacherById(String id);


    /**
     * 更新老师的具体的信息
     * @param teacher
     * @return
     */
    int updateTeacher(Teacher teacher);


    /**
     * 根据id数组删除指定的老师信息
     * @param id
     * @return
     */
    int deleteTeacherByIds(String[] id);


    /**
     * 检索所有的老师信息
     * @return
     */
    List<Teacher> selectAllTeachers();


    /**
     * 通过id检索所有的老师信息
     * @param id
     * @return
     */
    List<Teacher> selectAllTeacherByIds(String[] id);

}